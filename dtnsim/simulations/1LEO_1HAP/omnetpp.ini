
[General]
allow-object-stealing-on-deletion = true
network = src.dtnsim						
repeat = 50
sim-time-limit = 604800s
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"		

[sat_1GS]
result-dir = results_1sat_1GS									
dtnsim.nodesNumber = 2	
dtnsim.node[*].dtn.routing = "cgrModel350"
#dtnsim.node[*].dtn.routing = "cgrModelRev17"
#dtnsim.node[*].dtn.routingType = "routeListType:allPaths-initial+anchor,volumeAware:allContacts,extensionBlock:off,contactPlan:local"
#dtnsim.node[*].dtn.printRoutingDebug=true

dtnsim.central.contactsFile = "contactPlan/contacts_1sat_1GS.txt"
#dtnsim.node[*].dtn.saveBundleMap = true
#dtnsim.central.saveTopology = true
#dtnsim.central.saveFlows = true
#dtnsim.central.saveLpFlows = true

dtnsim.node[1].app.enable=true			
dtnsim.node[1].app.bundlesNumber="1000"
dtnsim.node[1].app.start="0"
dtnsim.node[1].app.destinationEid="2"
dtnsim.node[1].app.size="20" 
#dtnsim.node[3].dtn.sdrSize = 9

# Nodes's failure rates
dtnsim.node[2].fault.enable = true
dtnsim.node[2].fault.faultSeed = ${repetition}*10
dtnsim.node[2].fault.meanTTF = ${TTF=10s}#, 20s, 40s, 60s, 80s, 100s,200s,300s,400s,500s,600s,700s,800s,900s,1000s}
dtnsim.node[2].fault.meanTTR = 1000s

[sat_1HAP_1GS]
result-dir = results_1sat_1HAP_1GS	
dtnsim.nodesNumber = 3	
dtnsim.node[*].dtn.routing = "cgrModel350"
#dtnsim.node[*].dtn.routingType = "routeListType:allPaths-initial+anchor,volumeAware:allContacts,extensionBlock:off,contactPlan:local"
#dtnsim.node[*].dtn.printRoutingDebug=true

dtnsim.central.contactsFile = "contactPlan/contacts_1sat_1HAP_1GS.txt"
#dtnsim.node[*].dtn.saveBundleMap = true
#dtnsim.central.saveTopology = true
#dtnsim.central.saveFlows = true
#dtnsim.central.saveLpFlows = true

dtnsim.node[1].app.enable=true			
dtnsim.node[1].app.bundlesNumber="1000"
dtnsim.node[1].app.start="0"
dtnsim.node[1].app.destinationEid="3"
dtnsim.node[1].app.size="20" 
#dtnsim.node[3].dtn.sdrSize = 9

# Nodes's failure rates
dtnsim.node[3].fault.enable = true
dtnsim.node[3].fault.faultSeed = ${repetition}*10
dtnsim.node[3].fault.meanTTF = ${TTF=10s}#, 20s, 40s, 60s, 80s, 100s,200s,300s,400s,500s,600s,700s,800s,900s,1000s}
dtnsim.node[3].fault.meanTTR = 1000s




